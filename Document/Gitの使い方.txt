＜Gitの使い方＞

・Gitとは

１つのプロジェクトを共同で開発する場合に、ソースコードやリソースを効率よく共有・管理するためのツールです。
同じソースコードを書き換えた場合でも、書き換えた場所が重なっていなければ、いい感じにマージしてくれます。
書き換えた場所が重なっていた場合も、修正するための補助を行ってくれます。

変更箇所を履歴として確認することが可能です。

変更した個所をなかったことにしたい場合に、過去のバージョンに戻すことができます。
一時的に過去のバージョンに戻すこともできます。

Gitは共同作業を行う上で必須のツールになっています。
プログラマーだけに限らず、プロジェクトに参加するほとんどの人が使用します。


・Gitを利用するには

プロジェクトを管理するためのGitサーバーが必要になります。
Gitサーバーでリポジトリを作ることで、プロジェクトを管理します。

Gitサーバーは有名なものに、GitHubとBitBucketがあります。
使いたいサーバーにアカウントを作成します。

１．GitHubにアカウントを作成する


・Gitを使うには

Gitサーバーに作成したリポジトリにアクセスするには、PCにツールをインストールする必要があります。
ツールには、コンソールからアクセスするコマンドラインツールと、GUIで操作するツールがあります。
よく使われるツールに、SourceTreeがあります。

１．SourceTreeのダウンロードとインストール
２．セットアップ（GitHubへのログイン）
３．リポジトリのクローン（https://github.com/TakaakiHoshiyama/HalTest.git）

クローンを行うと、PCのローカル上にプロジェクトが共有されます。


・ブランチについて

ブランチとは、プロジェクトを修正する際の作業場所のようなものです。
同じ作業場所でみんなで作業をすると、迷惑が掛かるので、自分の変更が安定して共有できるまで、作業場所を分けて作業を行います。
これを行うのがブランチ機能です。

リポジトリにはデフォルトで、mainというブランチが存在します。
そのブランチから別のブランチを作成し、編集作業はそちらのブランチを使用します。
こうすることでmainのブランチを汚さずに編集が行えます。

編集が完了したら、mainブランチを「マージ」して、編集を反映させます。
マージすると、自分の編集が他の人と共有されます。

１．ブランチを切り替える
２．ブランチを作成する


・プルとフェッチについて

共同で編集作業を行っていると、他人がブランチをマージしてアップデートすることがあります。
これを自分の環境でも確認できるようにするのが、「プル」作業と言います。
このプルを行うことで、サーバーと状態と同期を取ることができます。
逆に言うと、プルを行わない限り、ローカルのブランチが勝手にアップデートされることはありません。
プルを行う前に最新の情報を確認できるようにするために、「フェッチ」を行います。
フェッチはアップデートがあるかどうかを確認します。


・コミットとプッシュについて

編集作業をリポジトリに反映させたい場合、変更したファイルを反映するにはまず「コミット」を行います。
コミットを行うとローカルのリポジトリに反映されます。
この段階ではまだサーバーには反映されません。

サーバーに反映を行うには「プッシュ」を行います。
プッシュを行うとサーバーに反映が行われます。
この状態になれば、他の人からもそのブランチで変更があったことを確認できます。

１．ソースを書き換える、ファイルを追加する、ファイルを削除する
２．コミットする
３．プッシュする


・マージについて

プッシュして更新したブランチを、本流のブランチに反映させるために「マージ」作業を行います。
本流のブランチとは、みんなの編集が集まった大元の作業場所となります。
マージをするとまずローカルのリポジトリがマージされた状態となります。
この状態ではまだサーバーには反映されていません。
サーバーにマージを反映するにはプッシュを行います。
プッシュが完了すると、自分の変更が大元の作業場所に反映された形となり、全員に共有されます。
これで自分の編集作業は完了となります。

１．ブランチをマージする
２．プッシュする


・コンフリクトについて

マージを行う際、プルの際などに、コンフリクトという現象が起きる場合があります。
コンフリクトというのは、編集が他の人と被ってしまい、うまくマージできない状態のことです。
この場合、コンフリクトが起きた人と相談をして編集を調整する必要があります。
ここを失敗すると、自分や他人の編集が消えてしまいますので、注意が必要です。

１．コンフリクトを発生させる
２．コンフリクトを解消する
３．プッシュする


・自分のリポジトリの作り方

他人のリポジトリではなく、自分自身のプロジェクトを管理したい場合、リポジトリの作成を行う必要があります。
自分のリポジトリを他人と共同編集する場合は、権限を与える必要があります。

１．リポジトリを作成する
２．コラボレーターの設定を行う
３．リポジトリをローカルにクローンする


・プルリクエストについて

プルリクエストとは、個人の作業ブランチから本流ブランチにマージを行う際に、レビューを受ける仕組みです。
レビューとは、変更が問題ないかどうか他人がチェックすることです。
プロジェクトによっては、プルリクエストを出してレビューに合格しないとマージができない場合があります。
